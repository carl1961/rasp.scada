
https://github.com/kzeoliveira/rasp.scada

Step 1 - Install Java 8 on Ubuntu
OpenJDK 8 is available in standard Apt repositories. You can simply install Java 8 on an Ubuntu system using the following commands.

Run the commands below to install Java 8 on Ubuntu and LinuxMint.

      $sudo apt update
      $sudo apt install openjdk-8-jdk openjdk-8-jre

Step 2 - Check java installation
After successful installation of Oracle Java 8 using the steps above, we will check the installed version using the following command.

      $java -version

      $openjdk version "1.8.0_222"
      $OpenJDK Runtime Environment (build 1.8.0_222-8u222-b10-1ubuntu1~18.04.1-b10)
       $OpenJDK 64-Bit Server VM (build 25.222-b10, mixed mode)

Step 3 â€“ Setup JAVA_HOME and JRE_HOME Variable

Step 3 - Set up the JAVA_HOME and JRE_HOME
After installing Java on the Linux system, you must configure the environment variables JAVA_HOME and JRE_HOME, which are used by many Java applications to find Java libraries during runtime. You can set these variables in the file/etc/environment using the following command.

$cat >> /etc/environment <<EOL
JAVA_HOME= /usr/lib/jvm/java-8-openjdk-amd64
JRE_HOME=/usr/lib/jvm/java-8-openjdk-amd64/jre
EOL

All set, you've successfully installed Java 8 on a Linux system. You may also need to install the Tomcat server to run your Java web application. Use our other tutorial to install Tomcat 7 or install Tomcat 8 or install Tomcat 9 on Ubuntu, Debian and LinuxMint systems.

Installing Tomcat7 

Apache Tomcat is an Apache Foundation open source web server product such as the Apache HTTP server. It is used to implement Java Servlet and JSP applications. To deploy an application to Tomcat, we can simply create a war file and deploy it. For more details, visit the official apache website http://tomcat.apache.org/ .

This article will help you install tomcat 7 on the Ubuntu, Debian, and LinuxMint systems.

Step 1 - Check java

First, we need to make sure that we install java on the system. JAVA is the first requirement of installing tomcat. Use the following command to verify that you already have java installed on your system. Try to keep java up to date with the latest version.

     $java -version
     $java version "1.8.0_121"
     $Java(TM) SE Runtime Environment (build 1.8.0_121-b13)
     $Java HotSpot(TM) 64-Bit Server VM (build 25.121-b13, mixed mode)

If you don't have java installed, use the link: Install JAVA 8 on Ubuntu

Step 2 - Download the Tomcat 7 file

After you configure JAVA correctly on your system, download the apache tomcat file from the official Apache website using http://tomcat.apache.org/download-70.cgi or use the following command to download Tomcat 7.0.68 to the Apache server.

     $cd /opt
     $wget http://mirror.nbtelecom.com.br/apache/tomcat/tomcat-7/v7.0.96/bin/apache-tomcat-7.0.96.tar.gz
     
     

After completing download, extract the compressed file into the directory /opt. You can change this location according to your configuration.

     $sudo tar xzf apache-tomcat-7.0.96.tar.gz
     $sudo mv apache-tomcat-7.0.96.tar.gz tomcat7
     

Step 3 - Environment Variable Configuration

Before you start Tomcat, configure the environment variables by adding an entry in the ~/.bashrc file, so that the system environment can be configured at system startup with the following command.

     $echo "export CATALINA_HOME="/opt/tomcat7"" >> ~/.bashrc
     $source ~/.bashrc

Step 4 - Start Tomcat

After completing the entire configuration above, we will use the command below to start Tomcat. There is no need to compile your source. By default, Tomcat starts on port 8080, so make sure no other applicationis using the same port.

     $cd /opt/tomcat7
     $sudo ./bin/startup.sh

Step 5 - Access Tomcat
The Tomcat server works on the default 8080 port. Access tomcat in a web browser by connecting your server on port 8080.

 http: //svr1.tecadmin.net: 8080 
 
Step 6 - Set up user accounts

Finally, we need to create user accounts to protect and access the administrator/manager pages. Edit the conf/tomcat-users file.xml in your editor and paste inside the <tomcat-users> </tomcat-users>.

# user manager can access only manager section.
<role rolename="manager-gui" />
<user username="manager" password="_SECRET_PASSWORD_" roles="manager-gui" />

# user admin can access manager and admin section both.
<role rolename="admin-gui" />
<user username="admin" password="_SECRET_PASSWORD_" roles="manager-gui,admin-gui" />

Step 7 - Create Tomcat7 startup script

Create an init /etc/init.d/tomcat7 file using the following content.


#!/bin/bash

### BEGIN INIT INFO
# Provides:        tomcat7
# Required-Start:  $network
# Required-Stop:   $network
# Default-Start:   2 3 4 5
# Default-Stop:    0 1 6
# Short-Description: Start/Stop Tomcat server
### END INIT INFO

PATH=/sbin:/bin:/usr/sbin:/usr/bin

start() {
 sh /opt/tomcat7/bin/startup.sh
}

stop() {
 sh /opt/tomcat7/bin/shutdown.sh
}

case $1 in
  start) start;;
  stop)  stop;;
  restart) stop; start;;
  *) echo "Run as $0 "; exit 1;;
esac

Now run the following commands to set appropriate symbolic permissions and links for the init script.


      $chmod 755 /etc/init.d/tomcat7
      $update-rc.d tomcat7 defaults
      
      
      Install LibRXTX-java 

      $sudo apt-get install librxtx-java
      
      
      Restart your device 

      
      
        
      

