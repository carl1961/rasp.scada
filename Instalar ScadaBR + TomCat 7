Etapa 1 - Instale o Java 8 no Ubuntu
O OpenJDK 8 está disponível nos repositórios padrão do Apt. Você pode simplesmente instalar o Java 8 em um sistema Ubuntu usando os seguintes comandos.

Execute os comandos abaixo para instalar o Java 8 no Ubuntu e LinuxMint.

      $sudo apt update
      $sudo apt install openjdk-8-jdk openjdk-8-jre

Etapa 2 - Verifique a instalação do Java
Após a instalação bem-sucedida do Oracle Java 8 usando as etapas acima, vamos verificar a versão instalada usando o seguinte comando.

      $java -version

      $openjdk version "1.8.0_222"
      $OpenJDK Runtime Environment (build 1.8.0_222-8u222-b10-1ubuntu1~18.04.1-b10)
       $OpenJDK 64-Bit Server VM (build 25.222-b10, mixed mode)

Step 3 – Setup JAVA_HOME and JRE_HOME Variable

Etapa 3 - Configurar a variável JAVA_HOME e JRE_HOME
Após instalar o Java no sistema Linux, é necessário configurar as variáveis ​​de ambiente JAVA_HOME e JRE_HOME , que são usadas por muitos aplicativos Java para localizar bibliotecas Java durante o tempo de execução. Você pode definir essas variáveis ​​no arquivo / etc / environment usando o seguinte comando.

$cat >> /etc/environment <<EOL
JAVA_HOME= /usr/lib/jvm/java-8-openjdk-amd64
JRE_HOME=/usr/lib/jvm/java-8-openjdk-amd64/jre
EOL

Tudo pronto, você instalou o Java 8 com sucesso em um sistema Linux. Também pode ser necessário instalar o servidor Tomcat para executar seu aplicativo da web Java. Use nosso outro tutorial para instalar o Tomcat 7 ou instalar o Tomcat 8 ou instalar o Tomcat 9 nos sistemas Ubuntu, Debian e LinuxMint.

Instalando o Tomcat7 

Apache Tomcaté um produto de servidor da web de código aberto do Apache Foundation como o servidor HTTP Apache. É usado para implementar aplicativos Java Servlet e JSP. Para implantar um aplicativo no Tomcat, podemos simplesmente criar um arquivo de guerra e implantá-los. Para mais detalhes, visite o site oficial do apache http://tomcat.apache.org/ .

Este artigo o ajudará a instalar o tomcat 7 nos sistemas Ubuntu, Debian e LinuxMint.


Etapa 1 - Verifique o JAVA

Primeiro, precisamos garantir que instalamos o java no sistema. JAVA é o primeiro requisito da instalação do tomcat. Use o comando a seguir para verificar se você já possui o java instalado no seu sistema. Tente manter o java atualizado com a versão mais recente.

     $java -version
     $java version "1.8.0_121"
     $Java(TM) SE Runtime Environment (build 1.8.0_121-b13)
     $Java HotSpot(TM) 64-Bit Server VM (build 25.121-b13, mixed mode)

Caso você não tenha o java instalado, use o link: Instale o JAVA 8 no Ubuntu

Etapa 2 - Baixar o arquivo do Tomcat 7

Depois de configurar o JAVA corretamente no seu sistema, baixe o arquivo apache tomcat do site oficial do Apache usando http://tomcat.apache.org/download-70.cgi ou use o seguinte comando para baixar o Tomcat 7.0.68 no servidor Apache.

     $cd /opt
     $wget http://mirror.nbtelecom.com.br/apache/tomcat/tomcat-7/v7.0.96/bin/apache-tomcat-7.0.96.tar.gz
     
     

Após competir, extraia o arquivo compactado no diretório / opt. Você pode alterar este local conforme sua configuração.

     $sudo tar xzf apache-tomcat-7.0.96.tar.gz
     $sudo mv apache-tomcat-7.0.96.tar.gz tomcat7
     

Etapa 3 - Configuração da variável de ambiente

Antes de iniciar o Tomcat, configure as variáveis ​​de ambiente adicionando uma entrada no arquivo ~ / .bashrc, para que o ambiente do sistema possa ser configurado na inicialização do sistema com o seguinte comando.

     $echo "export CATALINA_HOME="/opt/tomcat7"" >> ~/.bashrc
     $source ~/.bashrc

Etapa 4 - Inicie o Tomcat

Depois de concluir toda a configuração acima, vamos usar o comando abaixo para iniciar o Tomcat. Não há necessidade de compilar sua fonte. Por padrão, o Tomcat inicia na porta 8080, portanto, verifique se nenhum outro aplicativo está usando a mesma porta.

     $cd /opt/tomcat7
     $sudo ./bin/startup.sh

Etapa 5 - Acesse o Tomcat
O servidor Tomcat funciona na porta 8080 padrão. Acesse o tomcat em um navegador da web conectando seu servidor na porta 8080.

 http: //svr1.tecadmin.net: 8080 
 
Etapa 6 - Configurar contas de usuário

Finalmente, precisamos criar contas de usuário para proteger e acessar as páginas de administrador / gerente. Edite o arquivo conf / tomcat-users.xml no seu editor e cole dentro das tags <tomcat-users> </tomcat-users>.

# user manager can access only manager section.
<role rolename="manager-gui" />
<user username="manager" password="_SECRET_PASSWORD_" roles="manager-gui" />

# user admin can access manager and admin section both.
<role rolename="admin-gui" />
<user username="admin" password="_SECRET_PASSWORD_" roles="manager-gui,admin-gui" />

Etapa 7 - Criar script de inicialização do Tomcat7

Crie um arquivo init /etc/init.d/tomcat7 usando o seguinte conteúdo.

#!/bin/bash

### BEGIN INIT INFO
# Provides:        tomcat7
# Required-Start:  $network
# Required-Stop:   $network
# Default-Start:   2 3 4 5
# Default-Stop:    0 1 6
# Short-Description: Start/Stop Tomcat server
### END INIT INFO

PATH=/sbin:/bin:/usr/sbin:/usr/bin

start() {
 sh /opt/tomcat7/bin/startup.sh
}

stop() {
 sh /opt/tomcat7/bin/shutdown.sh
}

case $1 in
  start) start;;
  stop)  stop;;
  restart) stop; start;;
  *) echo "Run as $0 "; exit 1;;
esac

Agora execute os seguintes comandos para definir permissões e links simbólicos adequados para o script init.

      $chmod 755 /etc/init.d/tomcat7
      $update-rc.d tomcat7 defaults
      
      
      Instalar LibRXTX-java 
      $sudo apt-get install librxtx-java
      
      
      Reinicie o dispositivo
      
      
        
      

